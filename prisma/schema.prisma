// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement()) @db.Integer
  name      String
  cpf       String        @unique @db.VarChar(11)
  email     String        @unique
  phone     String        @db.VarChar(12)
  password  String
  analyzes   Analysis[]
  logs      Log[]
  createdAt DateTime      @default(now()) @db.Timestamptz()
  // updatedAt DateTime @default(now()) @db.Timestamptz()
}

model Analysis {
  id           Int      @id @default(autoincrement()) @db.Integer
  name         String
  description  String
  user         User     @relation(fields: [userId], references: [id])
  userId       Int      @map("user_id") @db.Integer
  createdAt    DateTime @default(now()) @db.Timestamptz() @map("created_at")
  phases       Phase[]
  // updatedAt DateTime @default(now()) @db.Timestamptz()
}

model Phase {
  id           Int      @id @default(autoincrement()) @db.Integer
  name        String
  description String
  analysis    Analysis @relation(fields: [analysisId], references: [id])
  analysisId  Int      @map("analysis_id") @db.Integer
  images      Image[]
  createdAt   DateTime  @default(now()) @db.Timestamptz()
}

model Image {
  id          Int      @id @default(autoincrement()) @db.Integer
  link        String
  phase       Phase?    @relation(fields: [phaseId], references: [id])
  phaseId     Int?      @map("phase_id") @db.Integer
  scale       Scale?    @relation(fields: [scaleId], references: [id])
  scaleId     Int?      @map("scale_id") @db.Integer
  createdAt   DateTime @default(now()) @db.Timestamptz()
}

// model ScaleImage {
//   id          Int      @id @default(autoincrement()) @db.Integer
//   link        String
//   scale       Scale    @relation(fields: [scaleId], references: [id])
//   scaleId     Int      @map("scale_id") @db.Integer
//   createdAt   DateTime @default(now()) @db.Timestamptz()
// }

model Scale {
  id          Int      @id @default(autoincrement()) @db.Integer
  name        String
  images      Image[]
  createdAt   DateTime @default(now()) @db.Timestamptz()
}

model Log {
  id          Int      @id @default(autoincrement()) @db.Integer
  method      String
  route       String
  payload     String
  user        User    @relation(fields: [userId], references: [id])
  userId      Int     @map("user_id") @db.Integer
  createdAt   DateTime @default(now()) @db.Timestamptz()
}